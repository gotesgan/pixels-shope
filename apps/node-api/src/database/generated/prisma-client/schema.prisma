generator client {
  provider = "prisma-client-js"
  output   = "../src/database/generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  phone     String
  address   String
  city      String
  state     String
  country   String
  zipCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stores    Store[]
}

model Store {
  id             String          @id @default(cuid())
  name           String
  domain         String          @unique
  ownerId        String
  owner          User            @relation(fields: [ownerId], references: [id])
  categories     Category[]
  products       Product[]
  customers      Customer[]
  reviews        Review[]
  phonePePayment PhonePePayment?

  @@index([domain])
}

model Category {
  id            String     @id @default(cuid())
  name          String
  storeId       String
  store         Store      @relation(fields: [storeId], references: [id])
  parentId      String?
  parent        Category?  @relation("SubCategories", fields: [parentId], references: [id])
  subCategories Category[] @relation("SubCategories")
  products      Product[]
}

model Product {
  id            String   @id @default(cuid())
  name          String
  description   String
  originalPrice Float
  price         Float
  categoryId    String
  storeId       String
  category      Category @relation(fields: [categoryId], references: [id])
  store         Store    @relation(fields: [storeId], references: [id])
  reviews       Review[]

  @@index([categoryId])
}

model Review {
  id        String  @id @default(cuid())
  content   String
  rating    Int
  productId String
  storeId   String
  product   Product @relation(fields: [productId], references: [id])
  store     Store   @relation(fields: [storeId], references: [id])

  @@index([productId])
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  email     String?
  password  String
  phone     String
  address   String
  city      String
  state     String
  country   String
  zipCode   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  storeId   String
  store     Store    @relation(fields: [storeId], references: [id])

  @@unique([email, storeId]) // Unique email per store
  @@index([storeId])
}

model PhonePePayment {
  id         String  @id @default(cuid())
  storeId    String  @unique
  store      Store   @relation(fields: [storeId], references: [id])
  merchantId String
  saltKey    String
  saltIndex  String
  active     Boolean @default(true)

  @@index([storeId])
}
